@using Dev_proc.Constants
@using Dev_proc.Constants.Configuration
@using Dev_proc.Models.CompanyModels
@using Dev_proc.Models.Identity
@using Microsoft.AspNetCore.Identity
@model List<Company>
@inject UserManager<User> _userManager;
@{
	var userId = _userManager.GetUserId(User);
	int counter = 0;
}
@functions {
	public bool checkResumeIsSubmitted(Position position)
	{
		var userId = _userManager.GetUserId(User);
		if (userId == null)
		{
			return false;
		}
		return position.Applications.Any(x => x.UserId == Guid.Parse(userId));
	}
}

<div class="text-left">
	@foreach (var company in @Model)
	{
		<a class="h2" data-bs-toggle="collapse" href="#@company.Id" role="button" aria-expanded="false" aria-controls="@company.Id">
			@company.Name
		</a>
		<div class="collapse" id="@company.Id">
			@foreach (var position in company.Positions)
			{
				<p>
					<div class="card mb-3">
						<div class="card-header">@position.Name @CshtmlHelper.AvailablePlacesToName(@position.AvailablePlaces)</div>
						<div class="card-body">
							<div class="card-text">@position.Description</div>
						</div>
					</div>
					@if (User.IsInRole(ApplicationRoleNames.Student))
					{

						@if (checkResumeIsSubmitted(position))
						{
							<a href='@Url.Action("CheckYourCandidacy","Candidacy", new {userId = @userId, positionId = position.Id})' class="btn btn-secondary">Check your candidacy</a>
						}
						else
						{
							<a href='@Url.Action("SubmitResumeForPosition","Position", new {positionId = position.Id})' class="btn btn-primary">Submit your CV</a>
						}
					}
				</p>
			}
		</div>
		<hr>
	}
</div>

